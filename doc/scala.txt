*scala.txt* Syntax highlighting and helper functions for the Scala language.

This plugin is only available if 'compatible' is not set.
{Vi does not have any of this}

==============================================================================
INTRODUCTION                                    *scala*

Syntax highlighting and helper functions for the scala language. Extras
include:

  - Sorting of import statements, configurable to your conventions.

==============================================================================
OPTIONS                                         *scala-options*

Use these options to control behavior of the plugin. Default values are
indicated in the examples.

                                                   *'g:scala_scaladoc_indent'*
By default, the plugin indents documentation comments according to the
standard Javadoc format.
    /**
     * This is a doc comment using Javadoc-style indentation.
     */
Set this option to enable the indentation standard as recommended for Scaladoc
comments.
    /** This is a Scaladoc comment using 
      * the recommended indentation.
      */
>
    let g:scala_scaladoc_indent = 1
<

==============================================================================
COMMANDS                                        *scala-commands*

                                                *:SortScalaImports*
:SortScalaImports       There are two modes in which this command can operate.
                        By default it walks all import groups at the top of
                        the Scala file and orders their lines alphabetically.
                        A group is a series of lines starting with the
                        import keyword separated by one or more blank lines.

                        The second, more advanced mode, can be activated by
                        setting

                          let g:scala_sort_across_groups=1

                        This makes this command include all imports in the
                        sorting regardless of blank lines in between them and
                        puts them in three predefined groups instead.
                        The three groups in which the imports can fall are:

                          1. Scala and Java core
                          2. Third party libraries
                          3. First party code (ie. your own)

                        Java and Scala core imports are identified by the
                        java(x) and scala namespaces.
                        Everything else that isn't a first party namespace
                        will be a third party import.
                        You can define a regex that matches first party
                        namespaces by setting

                          g:scala_first_party_namespaces

                        For example in a standard Play app this would be
                        set to
                          g:scala_first_party_namespaces=
                             \ '\(controllers\|views\|models\)'

==============================================================================
CREDITS                                          *scala-credits*

Developed by Derek Wyatt, building on initial work by Stefan Matthias Aust.
Distributed under the Apache 2 license.

Project's home and Git repository: https://github.com/derekwyatt/vim-scala

Edited significantly by D. Ben Knoble: https://github.com/benknoble/vim-scala

------------------------------------------------------------------------------
 vim:tw=78:ts=8:ft=help:norl:
